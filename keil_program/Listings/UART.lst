C51 COMPILER V9.60.7.0   UART                                                              04/10/2024 01:39:04 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Objects\UART.obj
COMPILER INVOKED BY: D:\keil_c51\C51\BIN\C51.EXE Lib\src\UART.c WARNINGLEVEL(0) OPTIMIZE(9,SPEED) BROWSE INCDIR(.\Lib\in
                    -c;.\Lib;.\User) DEBUG OBJECTEXTEND PRINT(.\Listings\UART.lst) OBJECT(.\Objects\UART.obj)

line level    source

   1          #include "UART.h"
   2          
   3          char RxBuffer[RxBuffer_Len] = {0};
   4          bit USART_Busy;
   5          
   6          void String_Analysis()
   7          {
   8   1      
   9   1      }
  10          
  11          void USART_Init(u8 USART_Mode, bit Rx_Flag, u8 Priority, u8 SYSclk, u8 Baud_Rate, u8 Double_Baud_Flag, bit
             - USART_Timer)
  12          {
  13   1              u16 THLx;
  14   1              Priority &= 3;
  15   1              USART_Mode &= 3;
  16   1              PCON = 0;
  17   1              PCON |= (u8)Double_Baud_Flag << 7;                      //波特率倍速控制
  18   1              SCON = 0;
  19   1              SCON |= (USART_Mode << 6);                                              //设置工作模式
  20   1              REN = Rx_Flag;                                                                  //允许/禁止串行接收控制位
  21   1      
  22   1              IPH &= ~(1 << 4);                                                               //设置中断优先级
  23   1              IPH |= ((2 & Priority) << 3);                                   //设置中断优先级
  24   1              PS  = (1 & Priority);                                                   //设置中断优先级
  25   1      
  26   1              if (USART_Mode == USART_MODE_1 || USART_Mode == USART_MODE_3) 
  27   1              {
  28   2                      if (USART_Timer)
  29   2                      {
  30   3                              T2MOD = 0;                                                              //初始化定时器2模式寄存器
  31   3                              T2CON = 0;                                                              //初始化定时器2控制寄存器
  32   3                              THLx = 65536 - SYSclk / 32 / Baud_Rate; //定时器2 16位自动重装载
  33   3                              TL2 = THLx;                                                             //设置定时初始值
  34   3                              TH2 = THLx >> 8;                                                //设置定时初始值
  35   3                              RCAP2L = THLx;                                                  //设置定时初始值
  36   3                              RCAP2H = THLx >> 8;                                             //设置定时初始值
  37   3                              TR2 = 1;                                                                //定时器开启
  38   3                      }
  39   2                      else
  40   2                      {
  41   3                              TMOD &= 0x0F;                                                   //初始化定时器1寄存器
  42   3                              TMOD |= 1 << 5;                                                 //定时器1 8位自动重装载
  43   3                              THLx = 256 - (1 << (u8)Double_Baud_Flag) * SYSclk / 12 / 32 / Baud_Rate;        
  44   3                              TH1 = THLx;                                                             //设置定时初始值
  45   3                              TL1 = THLx;                                                             //设置定时初始值
  46   3                              TR1 = 1;                                                                //定时器开启
  47   3                      }
  48   2                      RCLK = USART_Timer;
  49   2                      TCLK = USART_Timer;
  50   2              }
  51   1              ES = 1;                                                                                 //允许串行口中断
  52   1              EA = 1;                                                                                 //允许总中断
  53   1      }
C51 COMPILER V9.60.7.0   UART                                                              04/10/2024 01:39:04 PAGE 2   

  54          
  55          /*----------------------------
  56          UART interrupt service routine
  57          ----------------------------*/
  58          void Usart_Isr() interrupt 4
  59          {
  60   1              static u16 Str_Count = 0;
  61   1          if (RI)
  62   1          {
  63   2              RI = 0;             //Clear receive interrupt flag
  64   2      
  65   2                      RxBuffer[Str_Count] = SBUF; 
  66   2                      if(RxBuffer[Str_Count] == '\n')
  67   2                      {
  68   3                              for(++Str_Count; Str_Count < RxBuffer_Len; ++Str_Count)
  69   3                                      RxBuffer[Str_Count] = 0;
  70   3                              Str_Count = 0;
  71   3                              String_Analysis();
  72   3                      }
  73   2                      else
  74   2                              ++Str_Count;
  75   2          }
  76   1          if (TI)
  77   1          {
  78   2              TI = 0;             //Clear transmit interrupt flag
  79   2              USART_Busy = 0;         //Clear transmit USART_Busy flag
  80   2          }
  81   1      }
  82          
  83          /*----------------------------
  84          Send a byte data to UART
  85          Input: dat (data to be sent)
  86          Output:None
  87          ----------------------------*/
  88          void SendData(char dat)
  89          {
  90   1          while (USART_Busy);         //Wait for the completion of the previous data is sent
  91   1          ACC = dat;              //Calculate the even parity bit P (PSW.0)
  92   1          if (P)                  //Set the parity bit according to P
  93   1          {
  94   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 0;            //Set parity bit to 0
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 1;            //Set parity bit to 1
              #endif
  99   2          }
 100   1          else
 101   1          {
 102   2      #if (PARITYBIT == ODD_PARITY)
                      TB8 = 1;            //Set parity bit to 1
              #elif (PARITYBIT == EVEN_PARITY)
                      TB8 = 0;            //Set parity bit to 0
              #endif
 107   2          }
 108   1          USART_Busy = 1;
 109   1          SBUF = ACC;             //Send data to UART buffer
 110   1      }
 111          
 112          /*----------------------------
 113          Send a string to UART
 114          Input: s (address of string)
 115          Output:None
C51 COMPILER V9.60.7.0   UART                                                              04/10/2024 01:39:04 PAGE 3   

 116          ----------------------------*/
 117          void SendString(char *s)
 118          {
 119   1          while (*s)              //Check the end of the string
 120   1          {
 121   2              SendData(*s++);     //Send current char and increment string ptr
 122   2          }
 123   1      }
 124          
 125          char putchar(char Char)
 126          {
 127   1          SendData(Char);
 128   1          return Char;
 129   1      }
 130          
 131          //适配vofa+串口示波器的JustFloat格式 浮点为大端 
 132          void SendFloat(unsigned char *Data) //发送一个字符
 133          {
 134   1              char i;
 135   1              for(i=0;i<4;++i)
 136   1                      SendData(Data[3-i]);
 137   1      }
 138          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    359    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     22       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       2
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
